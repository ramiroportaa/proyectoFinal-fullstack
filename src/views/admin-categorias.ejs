<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-F3w7mX95PdgyTmZZMECAngseQB83DfGTowi0iMjiWaeVhAn4FJkqJByhZMI3AhiU" crossorigin="anonymous">
    <!-- Css -->
    <link rel="stylesheet" href="/assets/css/style.css">
    <title>Proyecto Final | BackEnd | CoderHouse 2022</title>
</head>
<body>
    <header>
        <%- include("./includes/nav-admin.ejs") %>
        <%- include("./includes/nav-perfil.ejs") %>
    </header>

    <!-- Alertas informativas -->
    <div id="dialogoInfo" class="dialogoInfo text-uppercase justify-content-center">
    </div>

    <main class="container my-5">
        <div class="container">
            <!-- HERO -->
            <section class="py-5 bg-light mt-4">
                <div class="container">
                <div class="row px-4 px-lg-5 py-lg-4 align-items-center">
                    <div class="col-lg-6">
                    <h1 class="h2 text-uppercase mb-0" id="pepe">ALTA Y BAJA DE CATEGORIAS</h1>
                    </div>
                    <div class="col-lg-6 text-lg-right">
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb justify-content-lg-end mb-0 px-0">
                        <li class="breadcrumb-item"><a href="/admin">MENU</a></li>
                        <li class="breadcrumb-item active" aria-current="page">CATEGORIAS</li>
                        </ol>
                    </nav>
                    </div>
                </div>
                </div>
            </section>
            <!-- FORMULARIO -->
            <!-- nombre, descripcion, código, foto (url), precio, stock. -->
            <section class="text-center">
                <h2>CARGAR NUEVA CATEGORIA</h2>
                <form class="mt-5 mx-5">
                    <label for="name" class="form-label">Nombre</label>
                    <input type="text" required name="name" class="form-control">
                    <button type="submit" class="btn btn-success mt-3">CARGAR</button>
                </form>
            </section>

            <section class="mt-3 text-center">
                <h2>ELIMINAR CATEGORIA: </h2>
                <div id="categorias">

                </div>
            </section>
        </div>
    </main>

    <!-- BOOTSTRAP JavaScript Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.3/dist/umd/popper.min.js" integrity="sha384-W8fXfP3gkOKtndU4JGtKDvXbO53Wy8SZCQHczT5FMiiqmQfUpWbYdTil/SxwZgAN" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/js/bootstrap.min.js" integrity="sha384-skAcpIdS7UcVUC05LJ9Dxay8AXcDYfBJqt1CJ85S/CFujBsIzCIv+l9liuYLaMQ/" crossorigin="anonymous"></script>
    <!-- SweetAlert -->
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <!-- Own JS -->
    <script>
        const categoriasHTML = document.getElementById("categorias");

        const addCategory = async (category)=>{
            let res = await fetch("/api/categories", {
                method: "POST",
                body: JSON.stringify({name: category}),
                headers:{
                    'Content-Type': 'application/json'
                }
            })
            res = await res.json();
            if (res.error) return alert(res.message);
            Swal.fire({
                    title: `<strong>Categoría "${res.data}" agregada</strong>`,
                    icon: 'success',
                    html: "",
                    showCloseButton: true,
                    showCancelButton: false,
                    showConfirmButton: false,
                    focusConfirm: false,
                    timer: 4000
                }).then(()=>{
                    location.reload();
                });
        }
        const form = document.querySelector("form");
        form.addEventListener("submit", async (e)=>{
            e.preventDefault();
            const input = e.target.querySelector("input");
            await addCategory(input.value);
            form.reset();
        });

        const getAllCategories = async (category)=>{
            const categoriesArray = [];
            let res = await fetch("/api/categories");
            res = await res.json();
            res.data.forEach(data =>{
                categoriesArray.push(data._id);
            });
            return categoriesArray;
        }

        const deleteCategory = async (category) =>{
            let res = await fetch("/api/categories/"+category, {
                method: "DELETE"
            })
            return res;
        }

        const renderCategories = (categoriesArray) =>{
            categoriasHTML.innerHTML = "";
            categoriesArray.forEach(category => {
                let contenedor = document.createElement("button");
                contenedor.id = category;
                contenedor.className = "py-2 px-4 bg-dark text-white mb-3";
                contenedor.innerHTML = `<strong class="small text-uppercase font-weight-bold">${category}</strong>`;
                contenedor.addEventListener("mouseover", ()=>{
                    contenedor.classList.remove("bg-dark");
                    contenedor.classList.add("bg-danger");
                })
                contenedor.addEventListener("mouseout", ()=>{
                    contenedor.classList.remove("bg-danger");
                    contenedor.classList.add("bg-dark");
                })

                contenedor.addEventListener("click", async (e)=>{
                    const category = e.target.textContent;
                    Swal.fire({
                    title: 'Estas seguro?',
                    text: `Borraras la categoría ${category}`,
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Si, borrar!'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            deleteCategory(category).then(res => {
                                Swal.fire({
                                    title: `<strong>Categoría "${category}" ELIMINADA!</strong>`,
                                    icon: 'success',
                                    html: res.message,
                                    showCloseButton: true,
                                    showCancelButton: false,
                                    showConfirmButton: false,
                                    focusConfirm: false,
                                    timer: 4000
                                }).then(()=>{
                                    location.reload();
                                });
                            })
                        }
                    })
                });

                categoriasHTML.appendChild(contenedor);
            });
        }

        const initial = async ()=>{
            const categoriesArray = await getAllCategories();
            renderCategories(categoriesArray);
        }
        initial();
    </script>
</body>
</html>